@using Microsoft.AspNetCore.Authorization;

@page "/channels"
@page "/channels/{Id}"
@attribute [Authorize]
@inject IStringLocalizer<Channel> T
@inject ThemeManager ThemeManager
@inject NavigationManager NavigationManager
@inject IAccessTokenProvider AccessTokenProvider
@inject ISnackbar Snackbar
@inject IMessagesClient MessagesClient
@implements IDisposable
@using System.ComponentModel.DataAnnotations

<div class="@(isDarkMode ? "dark" : null)">

@foreach (var post in posts)
{
    bool first = IsFirst(post);
    bool last = IsLast(post);

    <Message @key="post.GetHashCode()" Direction="@(post.IsCurrentUser ? MessageDirection.Right : MessageDirection.Left)"
        First=@first Last=@last IsFooterVisible=@last IsSideAreaVisible=@(post.Sender != MyUserId)>
        <SideAreaTemplate>
            @if(first) 
            {
                <MudAvatar Class="mt-2" Size="Size.Small">@post.SenderInitials</MudAvatar>
            }
        </SideAreaTemplate>
        <ChildContent>
             <Bubble>
                @(new MarkupString(post.Content.Replace(Environment.NewLine, "<br />")))

                @if(post.Sender == MyUserId) 
                {
                    if(post.Confirmed) 
                    {
                        <MudIcon Icon="@Icons.Filled.CheckCircle" Size="Size.Small" Class="ms-1" Style="height: 0.8em;" />
                    }
                }
            </Bubble>
        </ChildContent>
        
        <FooterTemplate>
            @if(last) 
            {
                <div class="mb-2">
                    <TimeView>
                    @{
                        var published = post.Published;
                        var timeSince = context - published;
                    }
                    @if (timeSince.TotalMinutes < 30)
                    {
                        <small class="time">
                            @if (timeSince.TotalMinutes >= 1)
                            {
                                <text>@timeSince.Humanize(minUnit: Humanizer.Localisation.TimeUnit.Minute) ago</text>
                            }
                            else
                            {
                                <text>Now</text>
                            }
                        </small>
                    }
                    else 
                    {
                        <small>@published.ToString("HH:mm")</small>
                    }
                    </TimeView>
                </div>
            }
        </FooterTemplate>
    </Message>   
}

@* <Loader class="my-4" /> *@

<MudPaper Elevation="35" Class="mt-8 pa-4">
    <EditForm OnValidSubmit="Send" Model="@this">
        <DataAnnotationsValidator />

        <MudTextField @bind-Value="Text" Label="@T["Message"]" Lines="3" For="() => Text"></MudTextField>
        <MudButton ButtonType="ButtonType.Submit" StartIcon="@Icons.Material.Filled.Send">@T["Send"]</MudButton>
    </EditForm>
</MudPaper>

</div>
