@using Microsoft.FeatureManagement;
@using ChatApp.Chat.Channels;

@inject IStringLocalizer<NavMenu> T
@inject IFeatureManager FeatureManager
@inject IChannelsClient ChannelsClient
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.List">@T["Home"]</MudNavLink>

    <MudNavGroup Title="@T["Channels"]" Expanded="true">
        @if (isBoardEnabled)
        {
            @foreach (var channel in channels)
            {
                <MudNavLink Href="@($"/channels/{channel.Id}")" Icon="@Icons.Material.Filled.Chat">@T[@channel.Name]</MudNavLink>        
            }
        }
        <MudNavLink OnClick="CreateChannel" Icon="@Icons.Material.Filled.Add">@T["NewChannel"]</MudNavLink>
    </MudNavGroup>

</MudNavMenu>

@code {
    List<ChatApp.Channel> channels = new List<ChatApp.Channel>();
    bool isBoardEnabled = false;

    protected override async Task OnInitializedAsync()
    {
        isBoardEnabled = await FeatureManager.IsEnabledAsync("FeatureA");

        channels = (await ChannelsClient.GetChannelsAsync(1, 100, null, null)).Items.ToList();
    }

    async Task CreateChannel() 
    {
        var dialogRef = await DialogService.ShowAsync<NewChannelDialog>("New channel");
        var result = await dialogRef.Result;

        if(result.Canceled) return;

        var channel = (ChatApp.Channel)result.Data;

        channels.Add(channel);

        NavigationManager.NavigateTo($"/channels/{channel.Id}");
    }
}